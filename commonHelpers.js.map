{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nconst currentDate = new Date();\nlet userSelectedDate = null;\nconst options = {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose(selectedDates) {\n      const selectedDate = selectedDates[0];\n      if (selectedDate < currentDate) {\n        window.alert(\"Please choose a date in the future\");\n        start.disabled = true;\n      } else {\n        userSelectedDate = selectedDate; \n        start.disabled = false; \n      }\n    },\n  };\n\nflatpickr(\"#datetime-picker\", options);\n\n\n\n\nconst input = document.getElementById('datetime-picker');\nconst start = document.querySelector('.btn-start');\nconst days = document.querySelector('span[data-days]');\nconst hour = document.querySelector('span[data-hours]');\nconst mins = document.querySelector('span[data-minutes]');\nconst sec = document.querySelector('span[data-seconds]');\n\n\n\nstart.addEventListener('click', startTimer);\n\n\nfunction startTimer () {\nconst userSelectedDateUnix = userSelectedDate.getTime();\nconst timer = setInterval(() => { \n\n  const currentDataUnix = new Date().getTime()\n\n  \n    const timeLeft = userSelectedDateUnix - currentDataUnix;\n\n\n  days.textContent = addLeadingZero(convertMs(timeLeft).days);\n  hour.textContent = addLeadingZero(convertMs(timeLeft).hours);\n  mins.textContent = addLeadingZero(convertMs(timeLeft).minutes);\n  sec.textContent = addLeadingZero(convertMs(timeLeft).seconds);  \n}, 1000);\n\n}\n\n\n\n\n\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\n"],"names":["currentDate","userSelectedDate","options","selectedDates","selectedDate","start","flatpickr","days","hour","mins","sec","startTimer","userSelectedDateUnix","currentDataUnix","timeLeft","addLeadingZero","convertMs","value","ms","hours","minutes","seconds"],"mappings":"wIAEA,MAAMA,EAAc,IAAI,KACxB,IAAIC,EAAmB,KACvB,MAAMC,EAAU,CACZ,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,MAAMC,EAAeD,EAAc,CAAC,EAChCC,EAAeJ,GACjB,OAAO,MAAM,oCAAoC,EACjDK,EAAM,SAAW,KAEjBJ,EAAmBG,EACnBC,EAAM,SAAW,GAEpB,CACL,EAEAC,EAAU,mBAAoBJ,CAAO,EAKvB,SAAS,eAAe,iBAAiB,EACvD,MAAMG,EAAQ,SAAS,cAAc,YAAY,EAC3CE,EAAO,SAAS,cAAc,iBAAiB,EAC/CC,EAAO,SAAS,cAAc,kBAAkB,EAChDC,EAAO,SAAS,cAAc,oBAAoB,EAClDC,EAAM,SAAS,cAAc,oBAAoB,EAIvDL,EAAM,iBAAiB,QAASM,CAAU,EAG1C,SAASA,GAAc,CACvB,MAAMC,EAAuBX,EAAiB,UAChC,YAAY,IAAM,CAE9B,MAAMY,EAAkB,IAAI,KAAM,EAAC,QAAS,EAGpCC,EAAWF,EAAuBC,EAG1CN,EAAK,YAAcQ,EAAeC,EAAUF,CAAQ,EAAE,IAAI,EAC1DN,EAAK,YAAcO,EAAeC,EAAUF,CAAQ,EAAE,KAAK,EAC3DL,EAAK,YAAcM,EAAeC,EAAUF,CAAQ,EAAE,OAAO,EAC7DJ,EAAI,YAAcK,EAAeC,EAAUF,CAAQ,EAAE,OAAO,CAC9D,EAAG,GAAI,CAEP,CAOA,SAASC,EAAeE,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CACA,SAASD,EAAUE,EAAI,CAQrB,MAAMX,EAAO,KAAK,MAAMW,EAAK,KAAG,EAE1BC,EAAQ,KAAK,MAAOD,EAAK,MAAO,IAAI,EAEpCE,EAAU,KAAK,MAAQF,EAAK,MAAO,KAAQ,GAAM,EAEjDG,EAAU,KAAK,MAASH,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAX,EAAM,MAAAY,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}